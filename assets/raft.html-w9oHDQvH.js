const t=JSON.parse('{"key":"v-4ba06326","path":"/md/algorithm/consistency/raft.html","title":"Raft算法详解","lang":"zh-CN","frontmatter":{"title":"Raft算法详解","icon":"fab fa-markdown","tag":["一致性算法","Raft"],"description":"Paxos算法详解一文讲述了晦涩难懂的Paxos算法，以可理解性和易于实现为目标的Raft算法极大的帮助了我们的理解，推动了分布式一致性算法的工程应用，本文试图以通俗易懂的语言讲述Raft算法。 一、Raft算法概述 不同于Paxos算法直接从分布式一致性问题出发推导出来，Raft算法则是从多副本状态机的角度提出，用于管理多副本状态机的日志复制。Raft实现了和Paxos相同的功能，它将一致性分解为多个子问题：Leader选举（Leader election）、日志同步（Log replication）、安全性（Safety）、日志压缩（Log compaction）、成员变更（Membership change）等。同时，Raft算法使用了更强的假设来减少了需要考虑的状态，使之变的易于理解和实现。","head":[["meta",{"property":"og:url","content":"https://Alpha-yhma.github.io/md/algorithm/consistency/raft.html"}],["meta",{"property":"og:site_name","content":"Ikaros"}],["meta",{"property":"og:title","content":"Raft算法详解"}],["meta",{"property":"og:description","content":"Paxos算法详解一文讲述了晦涩难懂的Paxos算法，以可理解性和易于实现为目标的Raft算法极大的帮助了我们的理解，推动了分布式一致性算法的工程应用，本文试图以通俗易懂的语言讲述Raft算法。 一、Raft算法概述 不同于Paxos算法直接从分布式一致性问题出发推导出来，Raft算法则是从多副本状态机的角度提出，用于管理多副本状态机的日志复制。Raft实现了和Paxos相同的功能，它将一致性分解为多个子问题：Leader选举（Leader election）、日志同步（Log replication）、安全性（Safety）、日志压缩（Log compaction）、成员变更（Membership change）等。同时，Raft算法使用了更强的假设来减少了需要考虑的状态，使之变的易于理解和实现。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-10T08:44:07.000Z"}],["meta",{"property":"article:author","content":"yhma"}],["meta",{"property":"article:tag","content":"一致性算法"}],["meta",{"property":"article:tag","content":"Raft"}],["meta",{"property":"article:modified_time","content":"2023-12-10T08:44:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Raft算法详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-10T08:44:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yhma\\",\\"url\\":\\"https://github.com/Alpha-yhma/Alpha-yhma.github.io\\"}]}"]]},"headers":[{"level":2,"title":"一、Raft算法概述","slug":"一、raft算法概述","link":"#一、raft算法概述","children":[]},{"level":2,"title":"二、Leader选举","slug":"二、leader选举","link":"#二、leader选举","children":[]},{"level":2,"title":"三、日志同步","slug":"三、日志同步","link":"#三、日志同步","children":[]},{"level":2,"title":"四、安全性","slug":"四、安全性","link":"#四、安全性","children":[]},{"level":2,"title":"五、日志压缩","slug":"五、日志压缩","link":"#五、日志压缩","children":[]},{"level":2,"title":"六、成员变更","slug":"六、成员变更","link":"#六、成员变更","children":[]},{"level":2,"title":"七、Raft与Multi-Paxos的异同","slug":"七、raft与multi-paxos的异同","link":"#七、raft与multi-paxos的异同","children":[]},{"level":2,"title":"八、Raft算法总结","slug":"八、raft算法总结","link":"#八、raft算法总结","children":[]}],"git":{"createdTime":1702197847000,"updatedTime":1702197847000,"contributors":[{"name":"alpha","email":"dota2again2@hotmail.com","commits":1}]},"readingTime":{"minutes":13.8,"words":4140},"filePathRelative":"md/algorithm/consistency/raft.md","localizedDate":"2023年12月10日","excerpt":"<p><a href=\\"https://zhuanlan.zhihu.com/p/31780743\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Paxos算法详解</a>一文讲述了晦涩难懂的Paxos算法，以可理解性和易于实现为目标的Raft算法极大的帮助了我们的理解，推动了分布式一致性算法的工程应用，本文试图以通俗易懂的语言讲述Raft算法。</p>\\n<h2> 一、Raft算法概述</h2>\\n<p>不同于Paxos算法直接从分布式一致性问题出发推导出来，Raft算法则是从多副本状态机的角度提出，用于管理多副本状态机的日志复制。Raft实现了和Paxos相同的功能，它将一致性分解为多个子问题：Leader选举（Leader election）、日志同步（Log replication）、安全性（Safety）、日志压缩（Log compaction）、成员变更（Membership change）等。同时，Raft算法使用了更强的假设来减少了需要考虑的状态，使之变的易于理解和实现。</p>","autoDesc":true}');export{t as data};
