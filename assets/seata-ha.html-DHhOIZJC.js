import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as i,f as t}from"./app-bYae3XOa.js";const s={},r=t('<h1 id="seata高可用部署方案" tabindex="-1"><a class="header-anchor" href="#seata高可用部署方案" aria-hidden="true">#</a> Seata高可用部署方案</h1><h2 id="_1-seata简单介绍" tabindex="-1"><a class="header-anchor" href="#_1-seata简单介绍" aria-hidden="true">#</a> 1. Seata简单介绍</h2><p>Seata 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式。 此次OSF改造基于AT事务模式，实现非业务侵入的全局事务管理。</p><h2 id="_2-高可用部署架构图" tabindex="-1"><a class="header-anchor" href="#_2-高可用部署架构图" aria-hidden="true">#</a> 2. 高可用部署架构图</h2><figure><img src="https://iikaros-picgo.oss-cn-shanghai.aliyuncs.com/seata部署架构图.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Seata的高可用分为两部分：</p><ul><li>服务端：服务端需要启动多个实例，通过高可用的数据存储实现数据共享，数据存储方式支持redis以及db。</li><li>客户端：客户端需要动态感知服务端的上下线，为了实现这个目的，需要客户端和服务端同时注册到注册中心，注册中心可以选用nacos/redis/zk等。如果使用K8S平台进行部署，可以采用K8S自带的svc服务发现机制。</li></ul><h2 id="_3-注意事项" tabindex="-1"><a class="header-anchor" href="#_3-注意事项" aria-hidden="true">#</a> 3. 注意事项</h2><ul><li>客户端数据库需要添加<code>undo_log</code>表，用于记录AT模式下的事务回滚日志。</li><li>客户端支持的数据库为mysql/oracle/postgresql以及其他可以兼容上述协议的数据库，例如TIDB等。</li></ul>',9),c=[r];function o(d,n){return e(),i("div",null,c)}const _=a(s,[["render",o],["__file","seata-ha.html.vue"]]);export{_ as default};
